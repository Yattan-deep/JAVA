In Java, StringBuffer is a class that represents a mutable sequence of characters. It's similar to String, but unlike String, StringBuffer is modifiable, meaning you can change its contents after it's created.

Here are some key features and methods of StringBuffer:

Constructors:

StringBuffer(): Creates an empty StringBuffer with a default capacity of 16 characters.
StringBuffer(int capacity): Creates an empty StringBuffer with a specified capacity.
StringBuffer(String str): Creates a StringBuffer with the specified string as its initial contents.
Methods:

append(String str): Appends the specified string to the end of the StringBuffer.
append(char c): Appends the specified character to the end of the StringBuffer.
insert(int index, String str): Inserts the specified string at the specified index in the StringBuffer.
insert(int index, char c): Inserts the specified character at the specified index in the StringBuffer.
delete(int start, int end): Deletes the characters in the specified range from the StringBuffer.
replace(int start, int end, String str): Replaces the characters in the specified range with the specified string.
reverse(): Reverses the characters in the StringBuffer.
toString(): Returns a String representation of the StringBuffer.
Key differences from String:

StringBuffer is mutable, while String is immutable.
StringBuffer has a dynamic capacity, which can grow or shrink as needed, while String has a fixed length.
StringBuffer is thread-safe, while String is not.
When to use StringBuffer:

When you need to build a string incrementally, such as when reading from a file or network stream.
When you need to modify a string in place, such as when implementing a parser or tokenizer.
When you need to concatenate strings efficiently, as StringBuffer can be more efficient than using the + operator to concatenate strings.
Example usage:

java
StringBuffer sb = new StringBuffer("Hello");
sb.append(" World"); // sb now contains "Hello World"
sb.insert(5, "!"); // sb now contains "Hello! World"
sb.delete(5, 6); // sb now contains "Hello World"
System.out.println(sb.toString()); // prints "Hello World"

Note that in Java 5 and later, StringBuilder is a more efficient and flexible alternative to StringBuffer. StringBuilder is similar to StringBuffer, but it's not thread-safe, which makes it faster and more suitable for most use cases.




